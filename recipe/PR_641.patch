From 44fbbc008ebf747424e651611890346820b9287f Mon Sep 17 00:00:00 2001
From: Jesse Wiles <jesse.wiles@gmail.com>
Date: Wed, 29 Mar 2023 09:48:12 -0400
Subject: [PATCH] AC-149: Use package metadata on upload

---
 binstar_client/commands/upload.py   |  9 +++++++++
 binstar_client/tests/test_upload.py | 24 ++++++++++++++++++++++++
 2 files changed, 33 insertions(+)

diff --git a/binstar_client/commands/upload.py b/binstar_client/commands/upload.py
index 67b73042..386649b1 100644
--- a/binstar_client/commands/upload.py
+++ b/binstar_client/commands/upload.py
@@ -157,6 +157,10 @@ def add_release(aserver_api, args, username, package_name, version, release_attr
     try:
         # Check if the release already exists
         aserver_api.release(username, package_name, version)
+
+        # If it exists update public attrs if needed.
+        if args.use_package_metadata:
+            aserver_api.update_release(username, package_name, version, release_attrs)
     except errors.NotFound:
         if args.mode == 'interactive':
             create_release_interactive(aserver_api, username, package_name, version, release_attrs)
@@ -458,5 +462,10 @@ def add_parser(subparsers):
         dest='mode',
         const='skip',
     )
+    group.add_argument(
+        '--use-package-metadata',
+        action='store_true',
+        help='Overwrite existing release metadata with the metadata from the package.',
+    )
 
     parser.set_defaults(main=main)
diff --git a/binstar_client/tests/test_upload.py b/binstar_client/tests/test_upload.py
index 26d505e7..f0c84324 100644
--- a/binstar_client/tests/test_upload.py
+++ b/binstar_client/tests/test_upload.py
@@ -88,6 +88,30 @@ def test_upload_conda_v2(self, registry):
         registry.assertAllCalled()
         self.assertIsNotNone(json.loads(staging_response.req.body).get('sha256'))
 
+    @urlpatch
+    def test_upload_use_pkg_metadata(self, registry):
+        registry.register(method='HEAD', path='/', status=200)
+        registry.register(method='GET', path='/user', content='{"login": "eggs"}')
+        content = {'package_types': ['conda']}
+        registry.register(method='GET', path='/package/eggs/mock', content=content)
+        registry.register(method='GET', path='/release/eggs/mock/2.0.0', content='{}')
+        registry.register(method='PATCH', path='/release/eggs/mock/2.0.0', content='{}')
+        registry.register(
+            method='GET', path='/dist/eggs/mock/2.0.0/osx-64/mock-2.0.0-py37_1000.conda', status=404, content='{}')
+
+        content = {"post_url": "http://s3url.com/s3_url", "form_data": {}, "dist_id": "dist_id"}
+        staging_response = registry.register(
+            method='POST', path='/stage/eggs/mock/2.0.0/osx-64/mock-2.0.0-py37_1000.conda', content=content)
+
+        registry.register(method='POST', path='/s3_url', status=201)
+        registry.register(
+            method='POST', path='/commit/eggs/mock/2.0.0/osx-64/mock-2.0.0-py37_1000.conda', status=200, content={})
+
+        main(['--show-traceback', 'upload', '--use-package-metadata', data_dir('mock-2.0.0-py37_1000.conda')], False)
+
+        registry.assertAllCalled()
+        self.assertIsNotNone(json.loads(staging_response.req.body).get('sha256'))
+
     @urlpatch
     def test_upload_pypi(self, registry):
         registry.register(method='HEAD', path='/', status=200)
